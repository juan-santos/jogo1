#include "menu.h"

#ifdef __unix__
	#define SLASH "/"
#else
	#define SLASH "\\"
#endif

//construtor da tela menu
Menu::Menu() {
	alpha_max = 3 * 255;
	alpha_div = 3;
	playing = false;
}

int Menu::Run(sf::RenderWindow &App) {

	sf::Event Event;
	bool Running = true;
	sf::Texture Texture;
	sf::Sprite Sprite;
	int alpha = 0;
	sf::Font Font;
	sf::Text Menu1;
	sf::Text Menu2;
	sf::Text Menu3;
	sf::Text Menu4;
	int menu = 0;
	string path = "";

	if (!Texture.loadFromFile(path + "bin" + SLASH + "Release" + SLASH + "files" + SLASH + "images" + SLASH + "menu.png")){
		std::cerr << "Error loading imagem.png" << std::endl;
		return (-1);
	}

	Sprite.setTexture(Texture);
	Sprite.setColor(sf::Color(255, 255, 255, alpha));

    if (!Font.loadFromFile(path + "bin" + SLASH + "Release" + SLASH + "files" + SLASH + "fonts" + SLASH + "verdanab.ttf")){

		std::cerr << "Error loading verdanab.ttf" << std::endl;
		return (-1);
	}



	Menu4.setFont(Font);
	Menu4.setCharacterSize(20);
	Menu4.setString("Instruções");
	Menu4.setPosition({ 280.f, 100.f });

	Menu1.setFont(Font);
	Menu1.setCharacterSize(20);
	Menu1.setString("Play");
	Menu1.setPosition({ 280.f, 160.f });

	Menu2.setFont(Font);
	Menu2.setCharacterSize(20);
	Menu2.setString("Exit");
	Menu2.setPosition({ 280.f, 220.f });

	Menu3.setFont(Font);
	Menu3.setCharacterSize(20);
	Menu3.setString("Continue");
	Menu3.setPosition({ 280.f, 160.f });

	if (playing)
	{
		alpha = alpha_max;
	}

	while (Running)
	{
		//Verifying events
		while (App.pollEvent(Event))
		{
			// Window closed
			if (Event.type == sf::Event::Closed)
			{
				return (-1);
			}
			//Key pressed
			if (Event.type == sf::Event::KeyPressed)
			{
				switch (Event.key.code)
				{
				case sf::Keyboard::Up:
					menu = 0;
					break;
				case sf::Keyboard::Down:
					menu = 1;
					break;
				case sf::Keyboard::Return:
					if (menu == 0)
					{
						//Let's get play !
						playing = true;
						return (1);
					}
					else
					{
						//Let's get work...
						return (-1);
					}
					break;
				default:
					break;
				}
			}
		}
		//When getting at alpha_max, we stop modifying the sprite
		if (alpha<alpha_max)
		{
			alpha++;
		}
		Sprite.setColor(sf::Color(255, 255, 255, alpha / alpha_div));

		if (menu == 0) { //play
			Menu1.setColor(sf::Color(255, 0, 0, 255));
			Menu2.setColor(sf::Color(255, 255, 255, 255));
			Menu3.setColor(sf::Color(255, 0, 0, 255));
			Menu4.setColor(sf::Color(255, 0, 0, 255));
		}
		else { //exit
			Menu1.setColor(sf::Color(255, 255, 255, 255));
			Menu2.setColor(sf::Color(255, 0, 0, 255));
			Menu3.setColor(sf::Color(255, 255, 255, 255));
			Menu4.setColor(sf::Color(255, 255, 255, 255));
		}

		//limpa a tela
		App.clear();

		//desenha
		App.draw(Sprite);
		if (alpha == alpha_max) {

            //se estiver jogando
			if (playing) {
				App.draw(Menu3);
			}
			else {
			    //se não estiver jogando
				App.draw(Menu1);
			}
			App.draw(Menu2); //sair
			App.draw(Menu4); //instruções
		}
		App.display();
	}

	//Never reaching this point normally, but just in case, exit the application
	return (-1);
}
